#ARG phalcon_version

# trust this project public key to trust the packages.
#ADD https://dl.bintray.com/php-alpine/key/php-alpine.rsa.pub /etc/apk/keys/php-alpine.rsa.pub
RUN echo "https://dl.bintray.com/php-alpine/v3.12/php-7.4" >> /etc/apk/repositories
#RUN echo "http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories

##### INSTALL BASIC LIBS #####
RUN apk --no-cache update && apk upgrade
RUN apk --no-cache add curl autoconf g++ file re2c make zlib-dev libtool pcre2-dev 
RUN apk --no-cache add tzdata

##### INSTALL PHP #####
RUN apk --no-cache add apache2 apache2-ssl
RUN apk --no-cache add php php-apache2
RUN apk --no-cache add \
        php7-curl php7-gd php7-mbstring \
        php7-pdo php7-pdo_pgsql php7-pgsql \
        php7-soap php7-xml php7-dom php7-xmlreader php7-xsl php7-openssl php7-json php7-session php7-iconv 
RUN apk --no-cache add php7-intl 

##### INSTALL PHALCON #####
RUN mkdir -p /tmp/pear/cache
RUN apk --no-cache add php7-psr php7-dev php7-pear
#fix error on PEAR script
RUN sed -i '181 s/if (/if ($cacheid \&\& /' /usr/share/php7/PEAR/REST.php
#allowing more mem to be allocated for compile  
RUN sed -i 's/memory_limit = 128M/memory_limit = 512M/' /etc/php7/php.ini
RUN sed -i 's/display_errors = Off/display_errors = On/' /etc/php7/php.ini
RUN sed -i 's/post_max_size = 8M/post_max_size = 20M/' /etc/php7/php.ini
RUN sed -i 's/upload_max_filesize = 2M/upload_max_filesize = 20M/' /etc/php7/php.ini
RUN sed -i 's/max_execution_time = 30/max_execution_time = 90/' /etc/php7/php.ini
#RUN sed -i 's/;extension=intl/extension=intl/' /etc/php7/php.ini

#### PHALCON INSTALATION ####
RUN apk --no-cache add php7-phalcon
#RUN echo "extension=phalcon" >> /etc/php7/conf.d/30_phalcon.ini

##### CONFIGURE APACHE SERVER #####
RUN sed -i "s/#ServerName www.example.com:80/ServerName ${server_name}/" /etc/apache2/httpd.conf &&\
  sed -i '/LoadModule rewrite_module/s/^#//g' /etc/apache2/httpd.conf &&\
  sed -i 's#AllowOverride [Nn]one#AllowOverride All#' /etc/apache2/httpd.conf
  #&&\
  #sed -i "s/SSLCertificateKeyFile \/etc\/ssl\/apache2\/server.key/SSLCertificateKeyFile \/etc\/apache2\/ssl\/wasp21.key/" /etc/ap$
  #sed -i "s/SSLCertificateFile \/etc\/ssl\/apache2\/server.pem/SSLCertificateFile \/etc\/apache2\/ssl\/wasp21.crt/" /etc/apache2/$
  #sed -i "s/#SSLCertificateChainFile \/etc\/ssl\/apache2\/server-ca.pem/SSLCertificateChainFile \/etc\/apache2\/ssl\/wasp21CA.crt$

#RUN ln -s /usr/bin/php7 /usr/bin/php
RUN apk --no-cache add php7-phar php7-zlib
RUN mkdir /tmp/composer && cd /tmp/composer && php7 -r "copy('https://getcomposer.org/installer', '/tmp/composer/composer-setup.ph$
#RUN cd /tmp/composer && php7 -r "if (hash_file('sha384', '/tmp/composer/composer-setup.php') === 'e5325b19b381bfd88ce90a5ddb78234$
RUN cd /tmp/composer &&  php7 composer-setup.php --install-dir=/usr/local/bin --filename=composer && php7 -r "unlink('composer-set$

##### CLEANING IT UP #####
RUN rm -rfv /tmp/* /var/tmp/* /usr/share/doc/* /usr/share/man/*
#RUN rm -rfv /var/cache/apk/* /tmp/* /var/tmp/* /usr/share/doc/* /usr/share/man/*

##### COPIAR CRON #####
COPY crontab /etc/crontabs/root
RUN chmod 0644 /etc/crontabs/root

##### RUNNING APACHE #####
CMD ( crond -f -l 8 & ) && httpd -D FOREGROUND
